{"version":3,"sources":["Components/NavBar/NavBar.module.scss","Components/PreJunior/HomeWork_1/Message.module.css","common/EditableSpan.module.scss","Components/PreJunior/HomeWork_2/HomeWork_2.module.css","common/MyBtn.module.css","common/MyInput.module.css","Components/PreJunior/HomeWork_3/HomeWork_3.module.css","Components/Header/Header.module.css","common/MySelect.module.scss","Components/Junior/Junior.module.css","Components/Junior/HW8_ArrayUsers/Users.module.css","common/MyBtn.tsx","Components/PreJunior/HomeWork_2/HomeWork_2.tsx","common/MyInput.tsx","Components/PreJunior/HomeWork_3/HomeWork_3.tsx","Components/PreJunior/HomeWork_1/HomeWork_1.tsx","common/EditableSpan2.tsx","Components/PreJunior/PreJunior.tsx","Components/Header/Header.tsx","Components/NavBar/NavBar.tsx","Components/OldJunior/OldJunior.tsx","common/EditableSpan.tsx","common/MySelect.tsx","common/MyRadio.tsx","state/homeWorkReducer.ts","Components/Junior/HW8_ArrayUsers/Users.tsx","Components/Junior/HW8_ArrayUsers/UsersContainer.tsx","Components/Junior/Junior.tsx","App.tsx","serviceWorker.ts","state/redax-store.ts","index.tsx"],"names":["module","exports","MyBtn","props","className","red","styles","redBtn","btn","onClick","disabled","name","HomeWork_2","myAffairs","title","lessons","map","l","key","id","n","p","list_btn","deleteLesson","type","filter_btn_inner","changeFilter","MyInput","onBlur","value","onChange","e","currentTarget","onKeyPress","charCode","error","inputBase","placeholder","HomeWork_3","useState","text","setText","users","setUsers","onClickButton","addNewUserToArr","alert","length","newName","newUser","v1","s","work3","HomeWork_1","hours","Date","getHours","min","getMinutes","st","message_wrapper","message_inner","message_ava","src","alt","message_cont","message_name","message_text","message_date","EditableSpan2","editMode","setEditMode","valueInput","setValueInput","editable","autoFocus","editable_span","PreJunior","setLessons","filter","setFilter","lessonsForMyAffair","t","FilterLessons","Header","style","header","NavBar","active","setActive","NavBar_wrapper","Btn_burger","Btn_burger_active","NavBar_active","to","activeClassName","activeLink","OldJunior","EditableSpan","visibilityInput","pressEnter","saveData","RestoreDAta","MySelect","generalData","d","MyRadio","slice","initialStateUsers","sername","age","usersActions","SortByNameUpAC","payload","SortByNameDownAC","FilterByAgeAC","sortArr","arr","sort","a","b","x","toLowerCase","y","Users","el","users_list","sortNameUp","selectButtonName","sortNameDown","filterByAge","connect","state","HW","setSelectButtonName","usersArray","user","Junior","setValue","stateAsString","JSON","stringify","localStorage","setItem","saveState","activeSelect","setActiveSelect","activeRadio","setActiveRadio","defaultState","getItem","parse","restoreState","junior_inner","find","App","render","path","Boolean","window","location","hostname","match","reducers","combineReducers","action","reverse","store","createStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.af03a4cd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavBar_wrapper\":\"NavBar_NavBar_wrapper__2BiUP\",\"NavBar\":\"NavBar_NavBar__3J-Lu\",\"activeLink\":\"NavBar_activeLink__HVVuJ\",\"NavBar_active\":\"NavBar_NavBar_active__2Alk2\",\"Btn_burger\":\"NavBar_Btn_burger__23Xky\",\"Btn_burger_active\":\"NavBar_Btn_burger_active__t0bhz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message_wrapper\":\"Message_message_wrapper__1CRaQ\",\"message_inner\":\"Message_message_inner__2RO9Y\",\"message_ava\":\"Message_message_ava__5qFqK\",\"message_cont\":\"Message_message_cont__25EwY\",\"message_name\":\"Message_message_name__21kw8\",\"message_text\":\"Message_message_text__h7QY0\",\"message_date\":\"Message_message_date__bJNP0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editable\":\"EditableSpan_editable__1yf-g\",\"editable_span\":\"EditableSpan_editable_span__IT8SM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myAffairs\":\"HomeWork_2_myAffairs__2MMvb\",\"list_btn\":\"HomeWork_2_list_btn__16ytJ\",\"filter_btn_inner\":\"HomeWork_2_filter_btn_inner__2lDOJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"MyBtn_btn__2CDxd\",\"redBtn\":\"MyBtn_redBtn__3Bwyr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputBase\":\"MyInput_inputBase__1kZ2b\",\"red\":\"MyInput_red__3dwtm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"work3\":\"HomeWork_3_work3__1qWaR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__39DTi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MySelect\":\"MySelect_MySelect__1SCKD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"junior_inner\":\"Junior_junior_inner__G7vBN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users_list\":\"Users_users_list__3cXy3\"};","import React from 'react';\r\nimport styles from \"./MyBtn.module.css\";\r\n\r\nexport type myBtnType = {\r\n    name?: string\r\n    type?: string\r\n    red?: boolean\r\n    disabled?: boolean\r\n    onClick: () => void\r\n    className?: string\r\n\r\n\r\n}\r\n\r\nexport function MyBtn(props: myBtnType) {\r\n\r\n    return (\r\n        <div>\r\n            <button\r\n                className={props.red ? `${styles.redBtn} ${styles.btn}` : styles.btn}\r\n                onClick={props.onClick}\r\n                disabled={props.disabled}\r\n            > {props.name}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {FilterValueType} from \"../../../App\";\r\nimport styles from './HomeWork_2.module.css';\r\nimport {MyBtn} from \"../../../common/MyBtn\";\r\n\r\n\r\nexport type  lessonsType = {\r\n    id: number\r\n    n: string\r\n    p: string\r\n}\r\nexport type Home_3PropsType = {\r\n    title: string\r\n    lessons: Array<lessonsType>\r\n    changeFilter: (value: FilterValueType) => void\r\n    deleteLesson: (id: number) => void\r\n}\r\n\r\nexport function HomeWork_2(props: Home_3PropsType) {\r\n    return (\r\n        <div className={styles.myAffairs}>\r\n            <h2>{props.title}</h2>\r\n            <ul>{\r\n                props.lessons.map((l) => {\r\n                    return <li key={l.id}>\r\n                        <span>{l.n} -  </span>\r\n                        <span>степень важности: </span>\r\n                        <span>{l.p} </span>\r\n                        <div className={styles.list_btn}>\r\n                            <MyBtn onClick={() => props.deleteLesson(l.id)}\r\n                                   name={'удалить'}\r\n                                   type={'button'}\r\n                            />\r\n                        </div>\r\n                    </li>\r\n                })\r\n            }\r\n            </ul>\r\n            <div className={styles.filter_btn_inner}>\r\n                <MyBtn onClick={() => props.changeFilter('Все')}\r\n                       name={'Все'}\r\n                />\r\n                <MyBtn onClick={() => props.changeFilter('Высокая')}\r\n                       name={'Более важные'}\r\n\r\n                />\r\n                <MyBtn onClick={() => props.changeFilter('Средняя')}\r\n                       name={'важные'}\r\n                />\r\n                <MyBtn onClick={() => props.changeFilter('Низкая')}\r\n                       name={'Менее важные'}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {ChangeEvent, FocusEvent, KeyboardEvent} from 'react';\r\nimport styles from \"./MyInput.module.css\";\r\n\r\n\r\nexport type myInputType = {\r\n    type: 'text'\r\n    value: string\r\n    onChange: (value: string) => void\r\n    error?: 'red'\r\n    onKeyPress?: () => void\r\n    placeholder?: string\r\n    closeInput?: (value: string) => void\r\n    autoFocus?: boolean\r\n    onBlur?: () => void\r\n}\r\n\r\nexport function MyInput(props: myInputType) {\r\n\r\n    const onPressEnter = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (props.onKeyPress && e.charCode === 13) {\r\n            props.onKeyPress()\r\n        }\r\n    }\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => props.onChange(e.currentTarget.value);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                onBlur={props.onBlur}\r\n                type={props.type}\r\n                value={props.value}\r\n                onChange={handleChange}\r\n                onKeyPress={onPressEnter}\r\n                className={props.error ? `${styles.inputBase}${styles.red}` : styles.inputBase}\r\n                placeholder={props.placeholder}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState} from \"react\";\r\nimport {v1} from \"uuid\";\r\nimport s from './HomeWork_3.module.css';\r\nimport {MyInput} from \"../../../common/MyInput\";\r\nimport {MyBtn} from \"../../../common/MyBtn\";\r\n\r\n\r\n\r\ntype newUserType = { id: string, name: string }\r\ntype helloUserPropsType = {}\r\n\r\nexport function HomeWork_3(props: helloUserPropsType) {\r\n\r\n    const [text, setText] = useState<string>('')\r\n    const [users, setUsers] = useState<Array<newUserType>>([])\r\n    const onClickButton = () => {\r\n        if (text !== '') {\r\n            addNewUserToArr(text);\r\n            alert(`Привет ${text}!  Ты ${users.length + 1} в списке`);\r\n            setText('')\r\n        } else {\r\n            alert('Введите своё имя.')\r\n        }\r\n    }\r\n    const addNewUserToArr = (newName: string) => {\r\n        let newUser: newUserType = {id: v1(), name: newName};\r\n        setUsers([newUser, ...users]);\r\n    }\r\n    const onChangeInput = (value: string) => {\r\n        setText(value);\r\n    }\r\n    const onPressEnter = () => {\r\n        onClickButton();\r\n    }\r\n\r\n    return (\r\n        <div className={s.work3}>\r\n            <h3>HomeWork_3</h3>\r\n            <MyInput value={text}\r\n                     onChange={onChangeInput}\r\n                     onKeyPress={onPressEnter}\r\n                     type={'text'}\r\n                     placeholder={'Поле ввода'}\r\n\r\n\r\n            />\r\n            <MyBtn onClick={onClickButton}\r\n                   name={'press'}\r\n                   disabled={false}\r\n                   type={'button'}\r\n            />\r\n            <div> {users.length} </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport st from './Message.module.css';\r\n\r\ntype MessagePropsType = {\r\n    src: string\r\n    name: string\r\n    text: string\r\n\r\n}\r\nexport function HomeWork_1(props: MessagePropsType) {\r\n    let hours = new Date().getHours()\r\n    let min = new Date().getMinutes()\r\n    return (\r\n        <div className={st.message_wrapper}>\r\n            <div className={st.message_inner}>\r\n                <div><img className={st.message_ava} src={props.src} alt=\"#\"/></div>\r\n                <div className={st.message_cont}>\r\n                    <span className={st.message_name}>{props.name} </span>\r\n                    <div className={st.message_text}>{props.text}</div>\r\n                    <span className={st.message_date}> {min < 10 ? hours + '.' + 0 + min : hours + '.' + min}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport styles from \"./EditableSpan.module.scss\";\r\nimport {MyInput} from \"./MyInput\";\r\n\r\n\r\nexport type EditableSpan2Type = {\r\n    text: string\r\n}\r\n\r\nexport function EditableSpan2(props: EditableSpan2Type) {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [valueInput, setValueInput] = useState('')\r\n\r\n    const visibilityInput = () => {\r\n        setEditMode(true)\r\n    }\r\n    const hideInput = () => {\r\n        setEditMode(false)\r\n    }\r\n    const onChangeInput = (value: string) => {\r\n        setValueInput(value)\r\n    }\r\n    const onPressEnter = () => {\r\n        setValueInput('')\r\n        setEditMode(false)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.editable}>\r\n            {editMode ?\r\n                <MyInput\r\n                    autoFocus\r\n                    type={\"text\"}\r\n                    value={valueInput}\r\n                    onChange={onChangeInput}\r\n                    onKeyPress={onPressEnter}\r\n                    onBlur={hideInput}\r\n                />\r\n                :\r\n                <span className={styles.editable_span} onClick={visibilityInput}>{props.text}</span>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport {FilterValueType} from \"../../App\";\r\nimport {HomeWork_2, lessonsType} from \"./HomeWork_2/HomeWork_2\";\r\nimport {HomeWork_3} from \"./HomeWork_3/HomeWork_3\";\r\nimport {HomeWork_1} from \"./HomeWork_1/HomeWork_1\";\r\nimport {EditableSpan2} from \"../../common/EditableSpan2\";\r\n\r\n\r\nexport function PreJunior() {\r\n    let [lessons, setLessons] = useState<Array<lessonsType>>([\r\n        {id: 1, n: \"Реакт\", p: \"Высокая\"},\r\n        {id: 2, n: \"Работа\", p: \"Низкая\"},\r\n        {id: 3, n: \"Спорт\", p: \"Средняя\"},\r\n        {id: 4, n: \"Семья\", p: \"Высокая\"},]);\r\n\r\n    let [filter, setFilter] = useState<FilterValueType>('Все');\r\n    let lessonsForMyAffair = lessons;\r\n\r\n    function changeFilter(value: FilterValueType) {\r\n        setFilter(value);\r\n    }\r\n\r\n    if (filter === 'Высокая') {\r\n        lessonsForMyAffair = lessons.filter(t => t.p === 'Высокая')\r\n    }\r\n    if (filter === 'Средняя') {\r\n        lessonsForMyAffair = lessons.filter(t => t.p === 'Средняя')\r\n    }\r\n    if (filter === 'Низкая') {\r\n        lessonsForMyAffair = lessons.filter(t => t.p === 'Низкая')\r\n    }\r\n\r\n    function deleteLesson(id: number) {\r\n        let FilterLessons = lessons.filter((t) => {\r\n            return t.id !== id;\r\n        })\r\n        setLessons(FilterLessons);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"App\">\r\n                <HomeWork_1\r\n                    src=\"https://avatars.mds.yandex.net/get-pdb/2301590/a92c498e-7910-4b77-b246-2afa0e5943fd/s375\"\r\n                    name=\"Ivan\"\r\n                    text=\" Hello World! Hello World! Hello World! Hello World!  \"/>\r\n                <HomeWork_2\r\n                    title='HomeWork_2'\r\n                    lessons={lessonsForMyAffair}\r\n                    changeFilter={changeFilter}\r\n                    deleteLesson={deleteLesson}\r\n                />\r\n                <HomeWork_3/>\r\n                <EditableSpan2 text = 'нажмите для ввода'/>\r\n                {/*<UniversalComp/>*/}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport style from './Header.module.css';\r\n\r\nexport function Header() {\r\n\r\n    return (\r\n        <div className={style.header}>\r\n            <span> Home Work</span>\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport style from './NavBar.module.scss';\r\n\r\n\r\nexport function NavBar() {\r\n    let [active, setActive] = useState(false)\r\n    const pressBtn = () => {\r\n        setActive(!active);\r\n    }\r\n    return (\r\n        <div className={style.NavBar_wrapper}>\r\n            <div className={active ? `${style.Btn_burger} ${style.Btn_burger_active}` : style.Btn_burger}\r\n                 onClick={pressBtn}>\r\n                <span></span>\r\n            </div>\r\n            <nav className={active ? `${style.NavBar} ${style.NavBar_active}` : style.NavBar}>\r\n                <div>\r\n                    <NavLink to='/PreJunior' activeClassName={style.activeLink}>\r\n                        PreJunior\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    <NavLink to='/Junior' activeClassName={style.activeLink}>\r\n                        Junior\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    <NavLink to='/OldJunior' activeClassName={style.activeLink}>\r\n                        OldJunior\r\n                    </NavLink>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport function OldJunior() {\r\n    return (\r\n        <div>Получше ....но - код </div>\r\n    )\r\n}","import React from 'react';\r\nimport styles from \"./EditableSpan.module.scss\";\r\nimport {MyInput} from \"./MyInput\";\r\nimport {MyBtn} from \"./MyBtn\";\r\n\r\n\r\nexport type EditableSpanType = {\r\n    value: string\r\n    text: string\r\n    onChange: (value: string) => void\r\n    visibilityInput?: () => void\r\n    editMode?: boolean\r\n    pressEnter?: () => void\r\n    saveData: () => void\r\n    RestoreDAta: () => void\r\n\r\n}\r\n\r\nexport function EditableSpan(props: EditableSpanType) {\r\n\r\n    const {value, text, onChange, editMode, visibilityInput, pressEnter, saveData, RestoreDAta} = props;\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={styles.editable}>\r\n            {!editMode && <span className={styles.editable_span} onClick={visibilityInput}> {text}</span>}\r\n            {editMode &&\r\n            <span>\r\n                <MyInput\r\n                    autoFocus\r\n                    type={\"text\"}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    onKeyPress={pressEnter}\r\n                />\r\n                <MyBtn\r\n                    name={'Сохранить'}\r\n                    onClick={saveData}/>\r\n                <MyBtn\r\n                    name={'Восстановить'}\r\n                    onClick={RestoreDAta}/>\r\n            </span>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React, {ChangeEvent} from 'react';\r\nimport {generalObjType} from \"../Components/Junior/Junior\";\r\nimport style from './MySelect.module.scss';\r\n\r\ntype MySelectType = {\r\n    value:string\r\n    onChange: (value: string) => void\r\n    generalData: generalObjType[]\r\n}\r\n\r\n\r\nexport function MySelect(props: MySelectType) {\r\n\r\n    const onChangeSelectHandler = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        props.onChange(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <select\r\n            value={props.value}\r\n            onChange={onChangeSelectHandler}\r\n            className={style.MySelect}\r\n        >\r\n            {\r\n                props.generalData.map(d => <option key={d.id}> {d.value}</option>)\r\n            }\r\n        </select>\r\n    )\r\n}","import React from 'react';\r\nimport {generalObjType} from \"../Components/Junior/Junior\";\r\n\r\n\r\ntype MyRadioType = {\r\n    generalData: generalObjType[]\r\n    value: string\r\n    onChange: (value: string) => void\r\n    name: string\r\n}\r\n\r\nexport function MyRadio(props: MyRadioType) {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <b>Выберете интересующий вас пункт: </b>\r\n            {\r\n                props.generalData.slice(1).map(t => {\r\n                        return <p key={t.id}><input type='radio'  name={props.name} value={t.value}/> {t.value}</p>\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import {v1} from \"uuid\";\r\n\r\n\r\nexport type UserType = {\r\n    id: string\r\n    name: string\r\n    sername: string\r\n    age: number\r\n}\r\n\r\nexport let initialStateUsers = {\r\n    users: [\r\n        {id: v1(), name: 'Julia', sername: 'Ivanova', age: 13},\r\n        {id: v1(), name: 'Kirill', sername: 'Ivanov', age: 28},\r\n        {id: v1(), name: 'Alex', sername: 'Ivanov', age: 18},\r\n        {id: v1(), name: 'Nikita', sername: 'Ivanov', age: 15},\r\n        {id: v1(), name: 'Victor', sername: 'Ivanov', age: 18},\r\n        {id: v1(), name: 'Anna', sername: 'Ivanova', age: 21}\r\n    ],\r\n    filter: null\r\n}\r\n\r\nexport type InitialStateUsersType = {\r\n    users: Array<UserType>\r\n    filter: string | null\r\n}\r\n\r\nexport type ActionsType = SortByNameUpActionType | SortByNameDownActionType | FilterByAgeActionType;\r\n\r\nexport type SortByNameUpActionType = {\r\n    type: \"SORT-BY-NAME-UP\"\r\n    payload: string | null\r\n}\r\nexport type SortByNameDownActionType = {\r\n    type: \"SORT-BY-NAME-DOWN\"\r\n    payload: string | null\r\n}\r\nexport type FilterByAgeActionType = {\r\n    type: \"CHECK\"\r\n    payload: string | null\r\n}\r\n\r\nexport const usersActions = {\r\n    SortByNameUpAC: (): SortByNameUpActionType => ({type: \"SORT-BY-NAME-UP\", payload: 'up'}) as const,\r\n    SortByNameDownAC: (): SortByNameDownActionType => ({type: \"SORT-BY-NAME-DOWN\", payload: 'down'}) as const,\r\n    FilterByAgeAC: (): FilterByAgeActionType => ({type: \"CHECK\", payload: '18'}) as const,\r\n}\r\n\r\nconst sortArr = (arr: Array<UserType>): Array<UserType> => {\r\n    arr = [...arr].sort(function (a, b) {\r\n        let x = a.name.toLowerCase();\r\n        let y = b.name.toLowerCase();\r\n        return x < y ? -1 : x > y ? 1 : 0;\r\n    })\r\n    return arr\r\n}\r\n\r\nexport const hwReducer = (state: InitialStateUsersType = initialStateUsers, action: ActionsType): InitialStateUsersType => {\r\n\r\n    switch (action.type) {\r\n        case \"SORT-BY-NAME-UP\": {\r\n            return {...state, users: sortArr(state.users),filter: action.payload}\r\n        }\r\n        case \"SORT-BY-NAME-DOWN\": {\r\n            return {...state, users: sortArr(state.users).reverse(),filter: action.payload}\r\n        }\r\n        case \"CHECK\": {\r\n            return {\r\n                ...state,\r\n                filter: action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport {UserType} from \"../../../state/homeWorkReducer\";\r\nimport styles from './Users.module.css';\r\nimport {MyBtn} from \"../../../common/MyBtn\";\r\n\r\n\r\ntype UsersType = {\r\n    users: Array<UserType>\r\n    sortNameUp: () => void\r\n    sortNameDown: () => void\r\n    filterByAge: () => void\r\n    selectButtonName?: string\r\n\r\n}\r\n\r\nexport const Users = (props: UsersType) => {\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {\r\n                    props.users.map(el => <ul className={styles.users_list} key={el.id}>\r\n                        <li> {`${el.name} ${el.sername} возраст - ${el.age}`} </li>\r\n                    </ul>)\r\n                }\r\n            </div>\r\n            <div>\r\n                <MyBtn\r\n                    onClick={props.sortNameUp}\r\n                    name='Sort by Name Up'\r\n                    red={'Sort by Name Up' === props.selectButtonName}\r\n                />\r\n                <MyBtn\r\n                    onClick={props.sortNameDown}\r\n                    name='Sort by Name Down'\r\n                    red={'Sort by Name Down' === props.selectButtonName}\r\n                />\r\n                <MyBtn\r\n                    onClick={props.filterByAge}\r\n                    name='Sort by Age: 18+'\r\n                    red={'Sort by Age: 18+' === props.selectButtonName}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../state/redax-store\";\r\nimport {InitialStateUsersType, usersActions} from \"../../../state/homeWorkReducer\";\r\nimport {Users} from \"./Users\";\r\n\r\n\r\ntype mapStateToPropsType = InitialStateUsersType\r\ntype mapDispatchToProps = {\r\n    sortNameUp: () => void\r\n    sortNameDown: () => void\r\n    filterByAge: () => void\r\n}\r\ntype UsersContainerType = mapStateToPropsType & mapDispatchToProps;\r\nexport type btnType = {\r\n    id: string\r\n    marker: string\r\n    isActive: boolean\r\n    name: string\r\n}\r\n\r\nconst UsersContainer = (props: UsersContainerType) => {\r\n    const {users, filter, filterByAge, sortNameDown, sortNameUp} = props\r\n\r\n    const [selectButtonName, setSelectButtonName] = useState<string>('')\r\n\r\n    let sortNameUpCallback = () => {\r\n        sortNameUp()\r\n        setSelectButtonName('Sort by Name Up')\r\n    }\r\n\r\n    let sortNameDownCallback = () => {\r\n        sortNameDown()\r\n        setSelectButtonName('Sort by Name Down')\r\n    }\r\n\r\n    let filterByAgeCallback = () =>{\r\n        filterByAge()\r\n        setSelectButtonName('Sort by Age: 18+')\r\n    }\r\n\r\n    let usersArray = [...users]\r\n    if (filter === '18') {\r\n        usersArray = users.filter(user => user.age >= +filter)\r\n    }\r\n\r\n    return (\r\n        <Users\r\n            users={usersArray}\r\n            filterByAge={filterByAgeCallback}\r\n            sortNameDown={sortNameDownCallback}\r\n            sortNameUp={sortNameUpCallback}\r\n            selectButtonName={selectButtonName}\r\n\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        users: state.HW.users,\r\n        filter: state.HW.filter\r\n    }\r\n}\r\nexport default connect<mapStateToPropsType, mapDispatchToProps, {}, AppStateType>(mapStateToProps, {\r\n    sortNameUp: usersActions.SortByNameUpAC,\r\n    sortNameDown: usersActions.SortByNameDownAC,\r\n    filterByAge: usersActions.FilterByAgeAC,\r\n})(UsersContainer);\r\n","import React, {useState} from 'react';\r\nimport {EditableSpan} from \"../../common/EditableSpan\";\r\nimport {v1} from \"uuid\";\r\nimport {MySelect} from \"../../common/MySelect\";\r\nimport {MyRadio} from \"../../common/MyRadio\";\r\nimport style from './Junior.module.css';\r\nimport UsersContainer from \"./HW8_ArrayUsers/UsersContainer\";\r\n\r\n\r\n//тип для обьектов, внутри масива selectData\r\nexport type generalObjType = {\r\n    id: string\r\n    value: string\r\n}\r\n\r\n\r\nexport function Junior() {\r\n////////////////////////////////////////////////////////////////\r\n    let [value, setValue] = useState('')\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n// Функция показа/скрытия инпута\r\n    const visibilityInput = () => setEditMode(true);\r\n    // Сохранение введенного текста  инпута в стэйт (в переменную value)\r\n    const onChangeInput = (value: string) => setValue(value);\r\n\r\n//Функция для кнопки \"Сохранить\", при клике =>  проверка на пустой инпут/ восстановление пустого инпута+ сообщение об удачной отправке данных+сохранение в localStorage\r\n    const saveData = () => {\r\n        if (value === '') {\r\n            alert('Incorrect data!')\r\n        } else {\r\n            setValue('')\r\n            alert('Data sent successfully!')\r\n            saveState('test', {x: value})\r\n        }\r\n    }\r\n// Функция для кнопки \"Восстановить\" => восстанавливает последний ввод в инпут из lS / (либо выводит алерт с сообщением из дефолтного обьекта - логика описана в restoreState)\r\n    const RestoreDAta = () => {\r\n        restoreState(\"test\", {x: 'Ранее введенные значения отсутствуют....'})\r\n    }\r\n\r\n    type StateType = {\r\n        x: string\r\n    }\r\n\r\n// Функция сохранения value из  inputs  в lS\r\n    function saveState(key: string, state: StateType) {\r\n        const stateAsString = JSON.stringify(state);\r\n        localStorage.setItem(key, stateAsString)\r\n    }\r\n\r\n// Функция восстановления value  из lS/ проверка на наличие в lS данных\r\n    function restoreState(key: string, defaultState: StateType) {\r\n        const stateAsString = localStorage.getItem(key);\r\n        if (stateAsString !== null) {\r\n            defaultState = JSON.parse(stateAsString)\r\n            setValue(defaultState.x)\r\n        } else {\r\n            alert(defaultState.x)\r\n            return defaultState;\r\n        }\r\n    }\r\n\r\n// Функция для инпута\r\n    const pressEnter = () => saveData();\r\n\r\n\r\n    ///            MySelect + Radio ////////////\r\n\r\n    // универсальный массив для MySelect + Radio\r\n    const generalData: generalObjType[] = [\r\n        {id: v1(), value: 'Выберите интересующий пункт: '},\r\n        {id: v1(), value: 'Персональные компъютеры'},\r\n        {id: v1(), value: 'Ноутбуки'},\r\n        {id: v1(), value: 'Смартфоны'},\r\n        {id: v1(), value: 'Комплектующие для ПК '},\r\n        {id: v1(), value: 'Комплектующие для ноутбуков'},\r\n        {id: v1(), value: 'Аксессуары'}\r\n    ]\r\n\r\n    const [activeSelect, setActiveSelect] = useState('')\r\n    const [activeRadio, setActiveRadio] = useState('')\r\n\r\n\r\n    const ChangeSelect = (value: string) => {\r\n        generalData.find(t => {\r\n            if (t.value === value) setActiveSelect(t.value)\r\n        })\r\n    }\r\n\r\n    const ChangeRadio = (value: string) => {\r\n        generalData.find(t => {\r\n            if (t.value === value) setActiveRadio(t.value)\r\n        })\r\n    }\r\n/////////////////////////////////////////////////////////\r\n    return (\r\n        <div>\r\n            <EditableSpan\r\n                value={value}\r\n                text='Press for open input...'\r\n                onChange={onChangeInput}\r\n                editMode={editMode}\r\n                visibilityInput={visibilityInput}\r\n                pressEnter={pressEnter}\r\n                saveData={saveData}\r\n                RestoreDAta={RestoreDAta}\r\n\r\n            />\r\n            <div className={style.junior_inner}>\r\n                <MySelect\r\n                value={activeSelect}\r\n                onChange={ChangeSelect}\r\n                generalData={generalData}\r\n            />\r\n                <MyRadio\r\n                    generalData={generalData}\r\n                    name='products'\r\n                    onChange={ChangeRadio}\r\n                    value={activeRadio}\r\n                />\r\n            </div>\r\n            <UsersContainer/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {PreJunior} from \"./Components/PreJunior/PreJunior\";\r\nimport {HashRouter, Route} from 'react-router-dom';\r\nimport {Header} from \"./Components/Header/Header\";\r\nimport {NavBar} from \"./Components/NavBar/NavBar\";\r\nimport {OldJunior} from \"./Components/OldJunior/OldJunior\";\r\nimport {Junior} from \"./Components/Junior/Junior\";\r\n\r\n\r\nexport type FilterValueType = 'Все' | 'Высокая' | 'Средняя' | 'Низкая';\r\n\r\nfunction App() {\r\n\r\n\r\n    return (\r\n        <HashRouter>\r\n            <div className={'App_wrapper'}>\r\n                <Header/>\r\n                <NavBar/>\r\n                <div className={'App_wrapper__content'}>\r\n                    <Route render={() =>\r\n                        <PreJunior/>}\r\n                           path={'/PreJunior'}\r\n                    />\r\n                    <Route render={() =>\r\n                        <Junior/>}\r\n                           path={'/Junior'}\r\n                    />\r\n                    <Route render={() =>\r\n                        <OldJunior/>}\r\n                           path={'/OldJunior'}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers, createStore} from \"redux\";\r\nimport {hwReducer} from \"./homeWorkReducer\";\r\n\r\n\r\n\r\ntype RootReducersType = typeof reducers;\r\nexport type AppStateType = ReturnType<RootReducersType>;\r\n\r\n\r\nlet reducers = combineReducers({\r\n    HW: hwReducer,\r\n})\r\n\r\nexport const store = createStore(reducers)\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./state/redax-store\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>\r\n    , document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}